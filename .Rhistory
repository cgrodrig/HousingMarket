fulldata_filled <- na.locf(fulldata_c)
Hag3_zoo <- read.zoo(fulldata_filled, format = "%Y-%m-%d") #zoo series
Hag3_ts <- ts(fulldata_filled) #ts
# Fill in missing values with linear interpolation
Hag3_interpolated <- na.approx(Hag3_zoo_og)
Hag3_interpolated_ts <- na.approx(Hag3_ts_og)
p1 <- plot(Hag3_ts_og[,2:4], main = "Original Time Series")
p2 <- plot(Hag3_ts[,2:4], main = "LOCF Time Series")
p3 <- plot(Hag3_interpolated_ts[,2:4], main = "Linearly Interpolated Time Series")
p1 + scale_x_date(date_labels = "%d")
p2 + scale_x_date(date_labels = "%d")
p3 + scale_x_date(date_labels = "%d")
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
autoplot(Hag3, facets=TRUE) + labs(x = "Time") + labs(y = "Dollars")
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
par(mfrow = c(2, 2))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
par(mfrow = c(3, 1))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
quartiles(Hag3_ts_og[,2:4])
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
quartile(Hag3_ts_og[,2:4])
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
quantile(Hag3_ts_og[,2:4])
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
#quantile(Hag3_ts_og[,2:4])
quantile(Hag3_ts[,2:4])
quantile(Hag3_interpolated_ts[,2:4])
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
#quantile(Hag3_ts_og[,2:4])
quantile(Hag3_ts[,2:4])
quantile(Hag3_interpolated_ts[,2:4])
hist(Hag3_ts[,2:4])
hist(Hag3_interpolated_ts[,2:4])
autoplot(Hag3_ts[,2:4], facets=TRUE) + labs(x = "Time") + labs(y = "Dollars")
ggseasonplot(Hag3_ts[,2:4], facets= FALSE) + labs(x = "Time") + labs(y = "Dollars")
gglagplot(Hag3_ts[,2:4])
gglagplot(Hag3_ts[,2:4], ncol = 9, nrow = 3)
gglagplot(Hag3_ts[,2:4], facets = "lags", ncol = 3) +
facet_wrap(~lags, nrow = 3)
# create a variable for lags
Hag3_ts$lags = as.factor(rep(1:9, each = 3))
# create the lag plots with 9 columns and 3 rows
gglagplot(Hag3_ts[,2:4], facets = "lags", ncol = 3) +
facet_wrap(~lags, nrow = 3)
# create a variable for lags
Hag3_ts$lags = as.factor(rep(1:9, each = 3))
# create the lag plots with 9 columns and 3 rows
gglagplot(Hag3_ts, facets = "lags", ncol = 3) +
facet_wrap(~lags, nrow = 3)
View(Hag3_ts)
gglagplot(Hag3_ts[,2:4], ncol = 9, nrow = 3)
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(ggpubr)
library(DataExplorer)
library(readr)
library(dplyr)
library(ggplot2)
library(kableExtra)
library(corrplot)
library(tidyverse)
library(GGally)
library(gridExtra)
library(reshape)
library(groupdata2)
library(skimr)
library(patchwork)
library(reshape)
library(sjPlot)
library(jtools)
library(zoo)
library(data.table)
library(car)
library(tseries)
library(forecast)
library(MASS)
library(TSstudio)
ALVO <-read.csv("ALVO.csv", header=T, fill=T, dec=".", sep=",")
colnames(ALVO) <- c('date_ALVO','open_ALVO', 'high_ALVO', 'low_ALVO', 'close_ALVO', 'adj.close_ALVO', 'volume_ALVO')
ALVO$date_ALVO <- as.Date(ALVO$date_ALVO)
ALVO <- ALVO %>%
mutate(ID=1:n())
TARO <-read.csv("TARO.csv", header=T, fill=T, dec=".", sep=",")
colnames(TARO) <- c('date_TARO','open_TARO', 'high_TARO', 'low_TARO', 'close_TARO', 'adj.close_TARO', 'volume_TARO')
TARO$date_TARO <- as.Date(TARO$date_TARO)
TARO <- TARO %>%
mutate(ID=1:n())
AMPH <-read.csv("AMPH.csv", header=T, fill=T, dec=".", sep=",")
colnames(AMPH) <- c('date_AMPH','open_AMPH', 'high_AMPH', 'low_AMPH', 'close_AMPH', 'adj.close_AMPH', 'volume_AMPH')
AMPH$date_AMPH <- as.Date(AMPH$date_AMPH)
AMPH <- AMPH %>%
mutate(ID=1:n())
full_data <- ALVO %>%
inner_join(AMPH, by = "ID") %>%
inner_join(TARO, by = c("ID"))
fulldata_c <- full_data %>%
dplyr::select(date_ALVO, close_ALVO, close_TARO, close_AMPH)
# Create a complete sequence of dates from the earliest to latest date
date_seq <- seq(min(full_data$date_ALVO), max(full_data$date_ALVO), by = "day")
# Create a data frame with only dates
dates_df <- data.frame(date_ALVO = date_seq)
# Left join with the original data frame
fulldata_c <- dates_df %>%
left_join(fulldata_c, by = "date_ALVO")
#Original Data converted to ts
Hag3_zoo_og <- read.zoo(fulldata_c, format = "%Y-%m-%d") #zoo series
Hag3_ts_og <- ts(fulldata_c)
#Fill in missing values with LOCF method
fulldata_filled <- na.locf(fulldata_c)
Hag3_zoo <- read.zoo(fulldata_filled, format = "%Y-%m-%d") #zoo series
Hag3_ts <- ts(fulldata_filled) #ts
# Fill in missing values with linear interpolation
Hag3_interpolated <- na.approx(Hag3_zoo_og)
Hag3_interpolated_ts <- na.approx(Hag3_ts_og)
p1 <- plot(Hag3_ts_og[,2:4], main = "Original Time Series")
p2 <- plot(Hag3_ts[,2:4], main = "LOCF Time Series")
p3 <- plot(Hag3_interpolated_ts[,2:4], main = "Linearly Interpolated Time Series")
p1 + scale_x_date(date_labels = "%d")
p2 + scale_x_date(date_labels = "%d")
p3 + scale_x_date(date_labels = "%d")
par(mfrow = c(1, 3))
summary(Hag3_ts_og[,2:4])
summary(Hag3_ts[,2:4])
summary(Hag3_interpolated_ts[,2:4])
boxplot(Hag3_ts_og[,2:4])
boxplot(Hag3_ts[,2:4])
boxplot(Hag3_interpolated_ts[,2:4])
#quantile(Hag3_ts_og[,2:4])
quantile(Hag3_ts[,2:4])
quantile(Hag3_interpolated_ts[,2:4])
#ggseasonplot(Hag3_ts[,2:4], facets= FALSE) + labs(x = "Time") + labs(y = "Dollars")
gglagplot(Hag3_ts[,2:4], ncol = 9, nrow = 3)
gglagplot(Hag3_ts[,2:4], ncol = 9, nrow = 3)
gglagplot(Hag3_interpolated_ts[,2:4])
ggAcf(Hag3_ts[,2:4])
ggAcf(Hag3_interpolated_ts[,2:4])
ggAcf(Hag3_ts)
ggAcf(Hag3_interpolated_ts[,2:4])
ggAcf(Hag3_ts[,2:4])
ggAcf(Hag3_interpolated_ts[,2:4])
ggAcf(Hag3_ts[,2:4] + ggtitle("Autocorrelation Plot of LOCF Data"))
ggAcf(Hag3_ts[,2:4]) + ggtitle("Autocorrelation Plot of LOCF Data")
ggAcf(Hag3_interpolated_ts[,2:4]) + ggtitle("Autocorrelation Plot of LI Data")
install.packages(stats)
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
acf_coeff_LOCF_1$acf
acf_coeff_LOCF_2$acf
acf_coeff_LOCF_3$acf
acf_coeff_LI_1$acf
acf_coeff_LI_2$acf
acf_coeff_LI_3$acf
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
acf_coeff_LOCF_1$acf
acf_coeff_LOCF_2$acf
acf_coeff_LOCF_3$acf
acf_coeff_LI_1$acf
acf_coeff_LI_2$acf
acf_coeff_LI_3$acf
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
acf_coeff_LOCF_1$acf
acf_coeff_LOCF_2$acf
acf_coeff_LOCF_3$acf
acf_coeff_LI_1$acf
acf_coeff_LI_2$acf
acf_coeff_LI_3$acf
library(lubridate)
library(ggpubr)
library(DataExplorer)
library(readr)
library(dplyr)
library(ggplot2)
library(kableExtra)
library(corrplot)
library(tidyverse)
library(GGally)
library(gridExtra)
library(reshape)
library(groupdata2)
library(skimr)
library(patchwork)
library(reshape)
library(sjPlot)
library(jtools)
library(zoo)
library(data.table)
library(car)
library(tseries)
library(forecast)
library(MASS)
library(TSstudio)
library(stats)
library(knitr)
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
#acf_coeff_LOCF_1$acf
#acf_coeff_LOCF_2$acf
#acf_coeff_LOCF_3$acf
#acf_coeff_LI_1$acf
#acf_coeff_LI_2$acf
#acf_coeff_LI_3$acf
acf_coeffs <- list(acf_coeff_LOCF_1$acf, acf_coeff_LOCF_2$acf, acf_coeff_LOCF_3$acf, acf_coeff_LI_1$acf, acf_coeff_LI_2$acf, acf_coeff_LI_3$acf)
names(acf_coeffs) <- c("LOCF_1", "LOCF_2", "LOCF_3", "LI_1", "LI_2", "LI_3")
kable(acf_coeffs, format = "markdown")
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
#acf_coeff_LOCF_1$acf
#acf_coeff_LOCF_2$acf
#acf_coeff_LOCF_3$acf
#acf_coeff_LI_1$acf
#acf_coeff_LI_2$acf
#acf_coeff_LI_3$acf
acf_coeffs <- list(acf_coeff_LOCF_1$acf, acf_coeff_LOCF_2$acf, acf_coeff_LOCF_3$acf, acf_coeff_LI_1$acf, acf_coeff_LI_2$acf, acf_coeff_LI_3$acf)
names(acf_coeffs) <- c("LOCF_1", "LOCF_2", "LOCF_3", "LI_1", "LI_2", "LI_3")
kable(acf_coeffs, format = "markdown")
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
#acf_coeff_LOCF_1$acf
#acf_coeff_LOCF_2$acf
#acf_coeff_LOCF_3$acf
#acf_coeff_LI_1$acf
#acf_coeff_LI_2$acf
#acf_coeff_LI_3$acf
acf_coeffs <- list(acf_coeff_LOCF_1$acf,
acf_coeff_LOCF_2$acf,
acf_coeff_LOCF_3$acf,
acf_coeff_LI_1$acf,
acf_coeff_LI_2$acf,
acf_coeff_LI_3$acf)
kable(as.data.frame(acf_coeffs),
caption = "Autocorrelation coefficients for LOCF and LI datasets",
format = "markdown")
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
#acf_coeff_LOCF_1$acf
#acf_coeff_LOCF_2$acf
#acf_coeff_LOCF_3$acf
#acf_coeff_LI_1$acf
#acf_coeff_LI_2$acf
#acf_coeff_LI_3$acf
acf_coeffs <- list(acf_coeff_LOCF_1$acf,
acf_coeff_LOCF_2$acf,
acf_coeff_LOCF_3$acf,
acf_coeff_LI_1$acf,
acf_coeff_LI_2$acf,
acf_coeff_LI_3$acf)
# Transpose the data frame to make it easier to read
autocorr_coeffs_t <- t(autocorr_coeffs)
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
#acf_coeff_LOCF_1$acf
#acf_coeff_LOCF_2$acf
#acf_coeff_LOCF_3$acf
#acf_coeff_LI_1$acf
#acf_coeff_LI_2$acf
#acf_coeff_LI_3$acf
acf_coeffs <- list(acf_coeff_LOCF_1$acf,
acf_coeff_LOCF_2$acf,
acf_coeff_LOCF_3$acf,
acf_coeff_LI_1$acf,
acf_coeff_LI_2$acf,
acf_coeff_LI_3$acf)
# Transpose the data frame to make it easier to read
autocorr_coeffs_t <- t(acf_coeffs)
# Create a table using knitr::kable()
kable(autocorr_coeffs_t, "html", caption = "Autocorrelation Coefficients") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
#acf_coeff_LOCF_1$acf
#acf_coeff_LOCF_2$acf
#acf_coeff_LOCF_3$acf
#acf_coeff_LI_1$acf
#acf_coeff_LI_2$acf
#acf_coeff_LI_3$acf
acf_coeffs <- list((round(acf_coeff_LOCF_1$acf),3),
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Print the autocorrelation coefficients
#acf_coeff_LOCF_1$acf
#acf_coeff_LOCF_2$acf
#acf_coeff_LOCF_3$acf
#acf_coeff_LI_1$acf
#acf_coeff_LI_2$acf
#acf_coeff_LI_3$acf
acf_coeffs <- list((round(acf_coeff_LOCF_1$acf),3),
# Load the stats library
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Round the autocorrelation coefficients to 3 decimal places
acf_coeffs_LOCF_1 <- round(acf_coeff_LOCF_1$acf, 3)
acf_coeffs_LOCF_2 <- round(acf_coeff_LOCF_2$acf, 3)
acf_coeffs_LOCF_3 <- round(acf_coeff_LOCF_3$acf, 3)
acf_coeffs_LI_1 <- round(acf_coeff_LI_1$acf, 3)
acf_coeffs_LI_2 <- round(acf_coeff_LI_2$acf, 3)
acf_coeffs_LI_3 <- round(acf_coeff_LI_3$acf, 3)
# Create a data frame with the rounded autocorrelation coefficients
autocorr_coeffs_df <- data.frame(acf_coeffs_LOCF_1, acf_coeffs_LOCF_2, acf_coeffs_LOCF_3,
acf_coeffs_LI_1, acf_coeffs_LI_2, acf_coeffs_LI_3)
# Create a table using knitr::kable()
knitr::kable(autocorr_coeffs_df, caption = "Autocorrelation Coefficients")
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Round the autocorrelation coefficients to 3 decimal places
acf_coeffs_LOCF_1 <- round(acf_coeff_LOCF_1$acf, 3)
acf_coeffs_LOCF_2 <- round(acf_coeff_LOCF_2$acf, 3)
acf_coeffs_LOCF_3 <- round(acf_coeff_LOCF_3$acf, 3)
acf_coeffs_LI_1 <- round(acf_coeff_LI_1$acf, 3)
acf_coeffs_LI_2 <- round(acf_coeff_LI_2$acf, 3)
acf_coeffs_LI_3 <- round(acf_coeff_LI_3$acf, 3)
# Create a data frame with the rounded autocorrelation coefficients
autocorr_coeffs_df <- data.frame(acf_coeffs_LOCF_1, acf_coeffs_LOCF_2, acf_coeffs_LOCF_3,
acf_coeffs_LI_1, acf_coeffs_LI_2, acf_coeffs_LI_3)
# Create a table using knitr::kable()
knitr::kable(autocorr_coeffs_df, caption = "Autocorrelation Coefficients")
library(stats)
# Extract the autocorrelation coefficients of the first variable
acf_coeff_LOCF_1 <- acf(Hag3_ts[,2])
acf_coeff_LOCF_2 <- acf(Hag3_ts[,3])
acf_coeff_LOCF_3 <- acf(Hag3_ts[,4])
acf_coeff_LI_1 <- acf(Hag3_interpolated_ts[,2])
acf_coeff_LI_2 <- acf(Hag3_interpolated_ts[,3])
acf_coeff_LI_3 <- acf(Hag3_interpolated_ts[,4])
# Round the autocorrelation coefficients to 3 decimal places
acf_coeffs_LOCF_1 <- round(acf_coeff_LOCF_1$acf, 3)
acf_coeffs_LOCF_2 <- round(acf_coeff_LOCF_2$acf, 3)
acf_coeffs_LOCF_3 <- round(acf_coeff_LOCF_3$acf, 3)
acf_coeffs_LI_1 <- round(acf_coeff_LI_1$acf, 3)
acf_coeffs_LI_2 <- round(acf_coeff_LI_2$acf, 3)
acf_coeffs_LI_3 <- round(acf_coeff_LI_3$acf, 3)
# Create a data frame with the rounded autocorrelation coefficients
autocorr_coeffs_df <- data.frame(acf_coeffs_LOCF_1, acf_coeffs_LOCF_2, acf_coeffs_LOCF_3,
acf_coeffs_LI_1, acf_coeffs_LI_2, acf_coeffs_LI_3)
library(stargazer)
install.packages("stargazer")
install.packages("stargazer")
install.packages("stargazer", dependencies = TRUE, repos = "http://cran.rstudio.com/")
